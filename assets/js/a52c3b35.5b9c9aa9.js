"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[691],{1018:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Deploying to Virtual Machine/HTTPS with Certbot","title":"HTTPS with Certbot","description":"Securing your website with HTTPS encrypts the data exchanged between your server and visitors, protecting sensitive information and improving trust. SSL/TLS certificates enable HTTPS and are essential for modern websites. Let\u2019s Encrypt is a free, automated certificate authority, and Certbot is a tool that makes it easy to obtain and manage these certificates.","source":"@site/docs/Deploying to Virtual Machine/HTTPS with Certbot.md","sourceDirName":"Deploying to Virtual Machine","slug":"/Deploying to Virtual Machine/HTTPS with Certbot","permalink":"/devdocs/docs/Deploying to Virtual Machine/HTTPS with Certbot","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/docs/Deploying to Virtual Machine/HTTPS with Certbot.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Reverse Proxy with Nginx","permalink":"/devdocs/docs/Deploying to Virtual Machine/Reverse Proxy with Nginx"},"next":{"title":"Startup Script","permalink":"/devdocs/docs/Deploying to Virtual Machine/Startup Script"}}');var l=i(4848),s=i(8453);const r={sidebar_position:4},a=void 0,o={},c=[{value:"Step-by-Step Guide to Enable HTTPS",id:"step-by-step-guide-to-enable-https",level:2},{value:"Step 1: Install Certbot",id:"step-1-install-certbot",level:3},{value:"Step 2: Confirm Nginx Configuration",id:"step-2-confirm-nginx-configuration",level:3},{value:"Step 3: Allow HTTPS Traffic Through Firewall",id:"step-3-allow-https-traffic-through-firewall",level:3},{value:"Step 4: Obtain and Install SSL Certificate",id:"step-4-obtain-and-install-ssl-certificate",level:3},{value:"Step 5: Verify Automatic Certificate Renewal",id:"step-5-verify-automatic-certificate-renewal",level:3},{value:"Troubleshooting Tips",id:"troubleshooting-tips",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"Securing your website with HTTPS encrypts the data exchanged between your server and visitors, protecting sensitive information and improving trust. SSL/TLS certificates enable HTTPS and are essential for modern websites. Let\u2019s Encrypt is a free, automated certificate authority, and Certbot is a tool that makes it easy to obtain and manage these certificates."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"step-by-step-guide-to-enable-https",children:"Step-by-Step Guide to Enable HTTPS"}),"\n",(0,l.jsx)(n.h3,{id:"step-1-install-certbot",children:"Step 1: Install Certbot"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Certbot helps you get free SSL certificates from Let\u2019s Encrypt."}),"\n",(0,l.jsx)(n.li,{children:"Install Certbot and the Nginx plugin by running:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo apt install certbot python3-certbot-nginx\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"step-2-confirm-nginx-configuration",children:"Step 2: Confirm Nginx Configuration"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Certbot automatically updates your Nginx config based on the ",(0,l.jsx)(n.code,{children:"server_name"})," directive."]}),"\n",(0,l.jsx)(n.li,{children:"Ensure you have a server block for your domain, typically located at:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:" /etc/nginx/sites-available/example.com\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Open the file for editing:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo nano /etc/nginx/sites-available/example.com\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Find the ",(0,l.jsx)(n.code,{children:"server_name"})," line and verify it matches your domain:"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-conf",children:"server_name example.com www.example.com;\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If it doesn\u2019t match, update it and save the file."}),"\n",(0,l.jsx)(n.li,{children:"Check for syntax errors with:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo nginx -t\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If errors appear, fix them before continuing."}),"\n",(0,l.jsx)(n.li,{children:"Reload Nginx to apply changes:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo systemctl reload nginx\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"step-3-allow-https-traffic-through-firewall",children:"Step 3: Allow HTTPS Traffic Through Firewall"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If you have the ",(0,l.jsx)(n.code,{children:"ufw"})," firewall enabled, update its rules:"]}),"\n",(0,l.jsx)(n.li,{children:"Check current firewall status:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo ufw status\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Likely output shows only HTTP allowed (",(0,l.jsx)(n.code,{children:"Nginx HTTP"})," profile)."]}),"\n",(0,l.jsxs)(n.li,{children:["Enable HTTPS by allowing the ",(0,l.jsx)(n.code,{children:"Nginx Full"})," profile."]}),"\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"Nginx Full"})," profile allows both HTTP (port 80) and HTTPS (port 443) traffic:"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo ufw allow 'Nginx Full'\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Remove the old HTTP-only rule:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo ufw delete allow 'Nginx HTTP'\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Confirm your firewall now allows HTTPS:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo ufw status\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"step-4-obtain-and-install-ssl-certificate",children:"Step 4: Obtain and Install SSL Certificate"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Run Certbot with Nginx plugin to request your certificates:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo certbot --nginx -d example.com -d www.example.com\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Follow prompts to:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Enter your email address."}),"\n",(0,l.jsx)(n.li,{children:"Agree to Let\u2019s Encrypt terms."}),"\n",(0,l.jsx)(n.li,{children:"Verify domain ownership."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Choose whether to redirect all HTTP traffic to HTTPS:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Option 1: No redirect (keep HTTP and HTTPS both active)."}),"\n",(0,l.jsx)(n.li,{children:"Option 2: Redirect (recommended to force HTTPS)."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Certbot will then:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Automatically configure Nginx for HTTPS."}),"\n",(0,l.jsx)(n.li,{children:"Reload Nginx to apply changes."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"You\u2019ll see a success message confirming where certificates are saved."}),"\n",(0,l.jsxs)(n.li,{children:["Visit your site with ",(0,l.jsx)(n.code,{children:"https://"})," and verify the lock icon in the browser."]}),"\n",(0,l.jsxs)(n.li,{children:["Optionally, test your server with ",(0,l.jsx)(n.a,{href:"https://www.ssllabs.com/ssltest/",children:"SSL Labs Server Test"})," for an A grade."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"step-5-verify-automatic-certificate-renewal",children:"Step 5: Verify Automatic Certificate Renewal"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Let\u2019s Encrypt certificates expire every 90 days."}),"\n",(0,l.jsx)(n.li,{children:"Certbot installs a systemd timer that runs twice daily to renew certificates."}),"\n",(0,l.jsx)(n.li,{children:"Check timer status with:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo systemctl status certbot.timer\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"To test renewal manually, run:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"sudo certbot renew --dry-run\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If no errors occur, your renewal is working."}),"\n",(0,l.jsx)(n.li,{children:"If renewal fails, Let\u2019s Encrypt will email you before expiration."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"troubleshooting-tips",children:"Troubleshooting Tips"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Ensure your domain\u2019s DNS points to your server\u2019s IP."}),"\n",(0,l.jsx)(n.li,{children:"Confirm ports 80 (HTTP) and 443 (HTTPS) are open in your firewall."}),"\n",(0,l.jsxs)(n.li,{children:["Run ",(0,l.jsx)(n.code,{children:"sudo nginx -t"})," after any config changes to catch errors early."]}),"\n",(0,l.jsxs)(n.li,{children:["Review Certbot logs in ",(0,l.jsx)(n.code,{children:"/var/log/letsencrypt/"})," for details on failures."]}),"\n",(0,l.jsx)(n.li,{children:"Backup your Nginx configs and certificates regularly."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const l={},s=t.createContext(l);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);