"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[526],{2087:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"DevDocs","href":"/devdocs/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Deploying a website to a VM","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Droplet Setup","href":"/devdocs/docs/Deploying to Virtual Machine/Droplet Setup","docId":"Deploying to Virtual Machine/Droplet Setup","unlisted":false},{"type":"link","label":"GitHub Deploy Keys","href":"/devdocs/docs/Deploying to Virtual Machine/GitHub Deploy Keys","docId":"Deploying to Virtual Machine/GitHub Deploy Keys","unlisted":false},{"type":"link","label":"Reverse Proxy with Nginx","href":"/devdocs/docs/Deploying to Virtual Machine/Reverse Proxy with Nginx","docId":"Deploying to Virtual Machine/Reverse Proxy with Nginx","unlisted":false},{"type":"link","label":"HTTPS with Certbot","href":"/devdocs/docs/Deploying to Virtual Machine/HTTPS with Certbot","docId":"Deploying to Virtual Machine/HTTPS with Certbot","unlisted":false},{"type":"link","label":"Startup Script","href":"/devdocs/docs/Deploying to Virtual Machine/Startup Script","docId":"Deploying to Virtual Machine/Startup Script","unlisted":false},{"type":"link","label":"GitHub Actions","href":"/devdocs/docs/Deploying to Virtual Machine/GitHub Actions","docId":"Deploying to Virtual Machine/GitHub Actions","unlisted":false}],"href":"/devdocs/docs/Deploying to Virtual Machine/"}]},"docs":{"Deploying to Virtual Machine/Droplet Setup":{"id":"Deploying to Virtual Machine/Droplet Setup","title":"Droplet Setup","description":"Before we can deploy your website, we need a server; in this case, a virtual machine (VM) on DigitalOcean, often called a droplet. This will host your web files, handle requests, and run the services needed for your site.","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/GitHub Actions":{"id":"Deploying to Virtual Machine/GitHub Actions","title":"GitHub Actions","description":"When you want to automate deployment from your GitHub repository to your server (e.g., a cloud VM), you need a secure way for GitHub Actions to connect to your server without exposing your credentials. This is where SSH keys and GitHub Secrets come into play.","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/GitHub Deploy Keys":{"id":"Deploying to Virtual Machine/GitHub Deploy Keys","title":"GitHub Deploy Keys","description":"When deploying a website from a private GitHub repository to a server (like a DigitalOcean droplet), you need a secure way for the server to access the repo without exposing your personal credentials. This is where deploy keys come in.","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/HTTPS with Certbot":{"id":"Deploying to Virtual Machine/HTTPS with Certbot","title":"HTTPS with Certbot","description":"Securing your website with HTTPS encrypts the data exchanged between your server and visitors, protecting sensitive information and improving trust. SSL/TLS certificates enable HTTPS and are essential for modern websites. Let\u2019s Encrypt is a free, automated certificate authority, and Certbot is a tool that makes it easy to obtain and manage these certificates.","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/Readme":{"id":"Deploying to Virtual Machine/Readme","title":"Deploying a website to a VM","description":"1\\\\. Deploying a Website to a DigitalOcean Virtual Machine","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/Reverse Proxy with Nginx":{"id":"Deploying to Virtual Machine/Reverse Proxy with Nginx","title":"Reverse Proxy with Nginx","description":"This guide explains how to configure Nginx as a reverse proxy for a website or web application running on a virtual machine. A reverse proxy forwards incoming requests from your domain (like example.com) to an internal web server (e.g., a Django or Node app running on localhost:8000).","sidebar":"tutorialSidebar"},"Deploying to Virtual Machine/Startup Script":{"id":"Deploying to Virtual Machine/Startup Script","title":"Startup Script","description":"Setting up your app as a systemd service ensures it starts automatically after a reboot and can be easily managed like any other Linux service. This is ideal for apps deployed with Docker or running persistently in the background.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"DevDocs","description":"This site contains organized technical notes and deployment guides.","sidebar":"tutorialSidebar"}}}}')}}]);