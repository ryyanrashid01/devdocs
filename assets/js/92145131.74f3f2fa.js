"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[3611],{4344:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Repositories/PRISM/Components/drone-canvas","title":"drone-canvas","description":"The drone-canvas component is the core simulation engine for the app. It renders all drone movements, paths, and simulation state on a canvas overlaying the map. This is where the main animation, tick logging, and path deviation logic lives.","source":"@site/docs/Repositories/PRISM/Components/drone-canvas.md","sourceDirName":"Repositories/PRISM/Components","slug":"/Repositories/PRISM/Components/drone-canvas","permalink":"/devdocs/docs/Repositories/PRISM/Components/drone-canvas","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Repositories/PRISM/Components/drone-canvas.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"drone-canvas","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Components","permalink":"/devdocs/docs/Repositories/PRISM/Components/"},"next":{"title":"drone-form","permalink":"/devdocs/docs/Repositories/PRISM/Components/drone-form"}}');var r=i(4848),o=i(8453);const t={title:"drone-canvas",sidebar_position:2},a="drone-canvas",l={},d=[{value:"High-Level Summary",id:"high-level-summary",level:2},{value:"Component Signature",id:"component-signature",level:2},{value:"Major State and Refs",id:"major-state-and-refs",level:2},{value:"Animation &amp; Drawing Flow",id:"animation--drawing-flow",level:2},{value:"Step-by-Step Walkthrough",id:"step-by-step-walkthrough",level:2},{value:"Extension Points",id:"extension-points",level:2},{value:"Related Files",id:"related-files",level:2},{value:"Screenshots &amp; Diagrams",id:"screenshots--diagrams",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"drone-canvas",children:"drone-canvas"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"drone-canvas"})," component is the ",(0,r.jsx)(n.strong,{children:"core simulation engine"})," for the app. It renders all drone movements, paths, and simulation state on a canvas overlaying the map. This is where the main animation, tick logging, and path deviation logic lives."]}),"\n",(0,r.jsx)(n.h2,{id:"high-level-summary",children:"High-Level Summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Renders drones, their paths, and deviations on a canvas above the map."}),"\n",(0,r.jsx)(n.li,{children:"Handles animation, tick logging, and simulation completion."}),"\n",(0,r.jsx)(n.li,{children:"Integrates with the map and simulation context."}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"All simulation logic and visual feedback for drone movement is here."})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://ik.imagekit.io/devdocs/img/prism/simulation_running.png",alt:"Simulation Running"})}),"\n",(0,r.jsx)(n.h2,{id:"component-signature",children:"Component Signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"export function DroneCanvas({ drones }: { drones: Drone[] });\n"})}),"\n",(0,r.jsx)(n.h2,{id:"major-state-and-refs",children:"Major State and Refs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"canvasRef"}),": Reference to the HTML canvas element."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mapRef"}),": Reference to the Leaflet map instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dronesRef"}),", ",(0,r.jsx)(n.code,{children:"mzRef"}),": Refs to the latest drones and monitoring zone."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"elapsedRef"}),", ",(0,r.jsx)(n.code,{children:"lastFrameTime"}),": Animation timing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kdTreesRef"}),": Array of kd-trees for fast nearest-neighbor path lookup."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"droneFirstTickMap"}),": Tracks first tick for each drone."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tickLogRef"}),": Shared tick log for simulation analytics."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"animation--drawing-flow",children:"Animation & Drawing Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"graph TD;\n  Start[Simulation Start] --\x3e|requestAnimationFrame| Animate[Animation Loop]\n  Animate --\x3e Draw[Draw Frame]\n  Draw --\x3e|For each drone| Interpolate[Interpolate Position]\n  Interpolate --\x3e CheckZone[Check Inside Zone]\n  CheckZone --\x3e DrawPath[Draw Actual Path]\n  CheckZone --\x3e DrawDeviation[Draw Deviation]\n  DrawDeviation --\x3e DrawIcon[Draw Drone Icon]\n  DrawPath --\x3e DrawIcon\n  DrawIcon --\x3e LogTick[Log Tick]\n  LogTick --\x3e CheckFinish[Check All Finished]\n  CheckFinish --\x3e|If finished| End[Finish Simulation]\n  CheckFinish --\x3e|Else| Animate\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step-walkthrough",children:"Step-by-Step Walkthrough"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sync canvas size with map"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'const resize = () => {\n  const size = mapRef.current.getSize();\n  canvas.width = size.x;\n  canvas.height = size.y;\n};\nmapRef.current.on("move zoom resize", resize);\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Animation Loop"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"requestAnimationFrame"})," to update ",(0,r.jsx)(n.code,{children:"elapsedRef"})," and call ",(0,r.jsx)(n.code,{children:"draw()"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Stops when all drones finish their paths."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const animate = () => {\n  const now = performance.now();\n  const dt = (now - lastFrameTime.current) / 1000;\n  elapsedRef.current += dt;\n  draw(elapsedRef.current);\n  animationId = requestAnimationFrame(animate);\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Drawing Logic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For each drone:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Interpolates position along its path."}),"\n",(0,r.jsx)(n.li,{children:"Checks if inside the monitoring zone."}),"\n",(0,r.jsxs)(n.li,{children:["Draws:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Actual path"})," (colored line)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Approved path"})," (gray dashed line)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deviation"})," (red line, with distance label)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Drone icon"})," (with risk color)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Speed label"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'ctx.strokeStyle = riskColors[riskLevel] ?? "blue";\nctx.lineWidth = 2;\nctx.moveTo(pathPoints[0].x, pathPoints[0].y);\n// ...\nctx.drawImage(\n  img,\n  point.x - imgSize / 2,\n  point.y - imgSize / 2,\n  imgSize,\n  imgSize\n);\nctx.fillText(`${p0.speed.toFixed(1)} m/s`, point.x, point.y - imgSize);\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tick Logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Logs per-tick processing times, risk levels, and first-tick status for each drone."}),"\n",(0,r.jsxs)(n.li,{children:["Pushes to ",(0,r.jsx)(n.code,{children:"tickLogRef"})," for later analysis."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"tickLogRef.current.push(tickEntry);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simulation Completion"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Checks if all drones have finished their paths."}),"\n",(0,r.jsxs)(n.li,{children:["Calls ",(0,r.jsx)(n.code,{children:"finishSimulation()"})," and stops animation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extension-points",children:"Extension Points"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add new risk levels"}),": Update ",(0,r.jsx)(n.code,{children:"riskColors"})," and ",(0,r.jsx)(n.code,{children:"droneImages"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Change path logic"}),": Edit the main loop in ",(0,r.jsx)(n.code,{children:"draw()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log new analytics"}),": Add fields to ",(0,r.jsx)(n.code,{children:"tickEntry"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom drawing"}),": Add new canvas drawing logic for overlays, labels, etc."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-files",children:"Related Files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./drone-context",children:(0,r.jsx)(n.code,{children:"drone-context.tsx"})}),": Provides simulation state and context."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../lib",children:(0,r.jsx)(n.code,{children:"lib/utils.ts"})}),": Utility functions for path and tick calculations."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"screenshots--diagrams",children:"Screenshots & Diagrams"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://ik.imagekit.io/devdocs/img/prism/deviation_drone_sim.png",alt:"Deviation drone sim"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["For further customization, see the code comments in ",(0,r.jsx)(n.code,{children:"src/components/drone-canvas.tsx"})," and related context files."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const r={},o=s.createContext(r);function t(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);