"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[4618],{6077:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Resources/Deploying to Virtual Machine/GitHub Actions","title":"GitHub Actions","description":"When you want to automate deployment from your GitHub repository to your server (e.g., a cloud VM), you need a secure way for GitHub Actions to connect to your server without exposing your credentials. This is where SSH keys and GitHub Secrets come into play.","source":"@site/docs/Resources/Deploying to Virtual Machine/GitHub Actions.md","sourceDirName":"Resources/Deploying to Virtual Machine","slug":"/Resources/Deploying to Virtual Machine/GitHub Actions","permalink":"/devdocs/docs/Resources/Deploying to Virtual Machine/GitHub Actions","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Resources/Deploying to Virtual Machine/GitHub Actions.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Startup Script","permalink":"/devdocs/docs/Resources/Deploying to Virtual Machine/Startup Script"},"next":{"title":"ML Development Environment: Setup Guide","permalink":"/devdocs/docs/Resources/Setting up a ML Dev Env/"}}');var t=r(4848),i=r(8453);const o={sidebar_position:6},c=void 0,d={},l=[{value:"What\u2019s Happening Here?",id:"whats-happening-here",level:2},{value:"Step 1: Prepare SSH Key Access for GitHub Actions",id:"step-1-prepare-ssh-key-access-for-github-actions",level:2},{value:"Generate SSH Key (On Your Local Machine or CI Runner)",id:"generate-ssh-key-on-your-local-machine-or-ci-runner",level:3},{value:"Add the Public Key to Your Server\u2019s Authorized Keys",id:"add-the-public-key-to-your-servers-authorized-keys",level:3},{value:"Step 2: Add Secrets to Your GitHub Repository",id:"step-2-add-secrets-to-your-github-repository",level:2},{value:"Step 3: Create the GitHub Actions Workflow",id:"step-3-create-the-github-actions-workflow",level:2},{value:"Step 4: Customize your setup",id:"step-4-customize-your-setup",level:2},{value:"Why This Works",id:"why-this-works",level:2},{value:"<em>Optional Improvements</em>",id:"optional-improvements",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function h(e){const s={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["When you want to ",(0,t.jsx)(s.strong,{children:"automate deployment"})," from your GitHub repository to your server (e.g., a cloud VM), you need a secure way for GitHub Actions to connect to your server without exposing your credentials. This is where ",(0,t.jsx)(s.strong,{children:"SSH keys"})," and ",(0,t.jsx)(s.strong,{children:"GitHub Secrets"})," come into play."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"whats-happening-here",children:"What\u2019s Happening Here?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"GitHub Actions will run on each push (or other triggers you define)."}),"\n",(0,t.jsx)(s.li,{children:"It uses an SSH private key stored securely in GitHub Secrets."}),"\n",(0,t.jsx)(s.li,{children:"It connects to your server over SSH."}),"\n",(0,t.jsx)(s.li,{children:"It pulls the latest code from your repository."}),"\n",(0,t.jsx)(s.li,{children:"It restarts your app\u2019s systemd service to apply the update."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"step-1-prepare-ssh-key-access-for-github-actions",children:"Step 1: Prepare SSH Key Access for GitHub Actions"}),"\n",(0,t.jsx)(s.h3,{id:"generate-ssh-key-on-your-local-machine-or-ci-runner",children:"Generate SSH Key (On Your Local Machine or CI Runner)"}),"\n",(0,t.jsx)(s.p,{children:"If you don\u2019t already have a deploy key or dedicated SSH key for GitHub Actions to connect to your server, generate one:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'ssh-keygen -t ed25519 -C "github-actions-deploy" -f github-actions -N ""\n'})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"This creates two files:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"github-actions"})," (private key)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"github-actions.pub"})," (public key) \u2014 to add on your server."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsxs)(s.p,{children:["Never share your private key. It must remain secret and secure. ",(0,t.jsx)("br",{}),"\nIt's safe to upload or share your public key (e.g., on GitHub or with a server). The private key is what grants access."]})}),"\n",(0,t.jsx)(s.h3,{id:"add-the-public-key-to-your-servers-authorized-keys",children:"Add the Public Key to Your Server\u2019s Authorized Keys"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Copy the content of ",(0,t.jsx)(s.code,{children:"github-actions.pub"}),"."]}),"\n",(0,t.jsx)(s.li,{children:"Log in to your server."}),"\n",(0,t.jsxs)(s.li,{children:["Edit the ",(0,t.jsx)(s.code,{children:"authorized_keys"})," file:"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"nano ~/.ssh/authorized_keys\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Paste the public key at the end of this file."}),"\n",(0,t.jsx)(s.li,{children:"Save and exit."}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"Why:"})," This allows GitHub Actions to SSH into your server without a password."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"step-2-add-secrets-to-your-github-repository",children:"Step 2: Add Secrets to Your GitHub Repository"}),"\n",(0,t.jsxs)(s.p,{children:["Go to your repository\u2019s ",(0,t.jsx)(s.strong,{children:"Settings \u2192 Secrets and variables \u2192 Actions \u2192 New repository secret"}),", and add the following:"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:"https://ik.imagekit.io/devdocs/img/deploy_to_vm/github_actions.png",alt:"Github Actions"})}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Secret Name"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"HOST"})}),(0,t.jsx)(s.td,{children:"Your server\u2019s IP or domain name"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"USER"})}),(0,t.jsx)(s.td,{children:"SSH username on the server"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SSH_KEY"})}),(0,t.jsxs)(s.td,{children:["The ",(0,t.jsx)(s.em,{children:"private"})," key file content from ",(0,t.jsx)(s.code,{children:"github-actions"})," (paste entire file)"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SERVICE_NAME"})}),(0,t.jsxs)(s.td,{children:["The name of your systemd service (e.g., ",(0,t.jsx)(s.code,{children:"yourapp.service"}),")"]})]})]})]}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsx)(s.p,{children:"Keep these secrets safe and never share them publicly."})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["If you prefer, you can hardcode ",(0,t.jsx)(s.code,{children:"HOST"}),", ",(0,t.jsx)(s.code,{children:"USER"}),", and ",(0,t.jsx)(s.code,{children:"SERVICE_NAME"})," directly in your deployment script. Just make sure to keep ",(0,t.jsx)(s.code,{children:"SSH_KEY"})," as a secret \u2014 it should never be committed or exposed."]})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"step-3-create-the-github-actions-workflow",children:"Step 3: Create the GitHub Actions Workflow"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Create a file at this location in your repository:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:".github/workflows/deploy.yml\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Paste the following:"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'name: Deploy on Push # This is just the name shown in the GitHub Actions UI\n\n# This defines when the workflow runs.\non:\n  push:\n    branches:\n      - main # Trigger deployment when code is pushed to the "main" branch\n      # Change this if your default branch is something else (e.g., "master" or "production")\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest # The GitHub Actions runner environment\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4 # Checks out the code in the workflow so it\'s available (not always used here but good practice)\n\n      - name: Setup SSH\n        run: |\n          mkdir -p ~/.ssh\n          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts\n\n          # Why: These steps create a temporary SSH setup so the runner can connect to your server securely.\n          # The private key is stored in GitHub Secrets as SSH_KEY.\n          # ssh-keyscan adds the server\'s host key to avoid "Are you sure you want to continue connecting?" prompts.\n\n      - name: Deploy to server\n        run: |\n          ssh ${{ secrets.USER }}@${{ secrets.HOST }} << EOF\n            cd /path/to/your/app  # Update this to the actual folder on your server\n            git fetch origin\n            git reset --hard origin/main  # Replace "main" if you\u2019re deploying a different branch\n            sudo systemctl restart ${{ secrets.SERVICE_NAME }}  # Replace with your actual systemd service\n          EOF\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"Why:"})," This SSHs into your server, updates the codebase, and restarts the service."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"step-4-customize-your-setup",children:"Step 4: Customize your setup"}),"\n",(0,t.jsx)(s.p,{children:"If you're writing your own workflow file or modifying the above:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Section"}),(0,t.jsx)(s.th,{children:"What You Can Change"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"on.push.branches"})}),(0,t.jsxs)(s.td,{children:["Change to match your deployment branch (e.g., ",(0,t.jsx)(s.code,{children:"production"}),")"]}),(0,t.jsx)(s.td,{children:"Or add more branches as needed"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"runs-on"})}),(0,t.jsx)(s.td,{children:"Use a different runner (e.g., self-hosted)"}),(0,t.jsxs)(s.td,{children:["Usually ",(0,t.jsx)(s.code,{children:"ubuntu-latest"})," is fine"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"secrets.SSH_KEY"})}),(0,t.jsxs)(s.td,{children:["Should contain the ",(0,t.jsx)(s.strong,{children:"private key"})," that matches the public key on your server"]}),(0,t.jsxs)(s.td,{children:["Add it under your repo\u2019s ",(0,t.jsx)(s.strong,{children:"Settings > Secrets"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"secrets.HOST"})}),(0,t.jsxs)(s.td,{children:["Your server's IP (e.g., ",(0,t.jsx)(s.code,{children:"123.45.67.89"}),")"]}),(0,t.jsx)(s.td,{children:"No protocol, no port"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"secrets.USER"})}),(0,t.jsxs)(s.td,{children:["The username used to SSH into your server (e.g., ",(0,t.jsx)(s.code,{children:"ubuntu"}),", ",(0,t.jsx)(s.code,{children:"deploy"}),")"]}),(0,t.jsx)(s.td,{children:"Must match the server setup"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"/path/to/your/app"})}),(0,t.jsx)(s.td,{children:"Absolute path to your app's folder on the server"}),(0,t.jsxs)(s.td,{children:["e.g., ",(0,t.jsx)(s.code,{children:"/home/ubuntu/my-app"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"origin/main"})}),(0,t.jsxs)(s.td,{children:["Replace ",(0,t.jsx)(s.code,{children:"main"})," with the correct branch if needed"]}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"origin/production"})," for example"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"sudo systemctl restart yourapp.service"})}),(0,t.jsx)(s.td,{children:"The command to restart your app\u2019s service"}),(0,t.jsxs)(s.td,{children:["Must be configured via ",(0,t.jsx)(s.code,{children:"systemd"})," on the server"]})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"why-this-works",children:"Why This Works"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"SSH private key"})," stored securely in GitHub Secrets allows passwordless login."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"ssh-keyscan"})," avoids SSH authenticity confirmation prompts."]}),"\n",(0,t.jsx)(s.li,{children:"The server updates your app\u2019s codebase directly from GitHub."}),"\n",(0,t.jsx)(s.li,{children:"The systemd service restart reloads your app with the new code."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"optional-improvements",children:(0,t.jsx)(s.em,{children:"Optional Improvements"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"git pull --rebase"})," instead of ",(0,t.jsx)(s.code,{children:"git reset"})," if you want to preserve uncommitted changes."]}),"\n",(0,t.jsx)(s.li,{children:"Add build or test steps before deployment."}),"\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"rsync"})," for file synchronization if your app needs static assets copied."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Permission denied (publickey):"})," SSH keys not set up properly; verify keys and authorized_keys."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Timeout or connection refused:"})," Check server IP, firewall, and SSH daemon status."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Service not restarting:"})," Verify service name and ",(0,t.jsx)(s.code,{children:"sudo"})," permissions for the GitHub user."]}),"\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"sudo visudo"})," to allow passwordless restart for your service:"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-pgsql",children:"youruser ALL=NOPASSWD: /bin/systemctl restart yourapp.service\n"})})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>c});var n=r(6540);const t={},i=n.createContext(t);function o(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);