"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[435],{3356:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Repositories/PRISM/Components/active-drones","title":"active-drones","description":"The active-drones component manages the initialization and display of all drones currently active in the simulation. It handles path generation, rogue drone logic, and readiness state for simulation start.","source":"@site/docs/Repositories/PRISM/Components/active-drones.md","sourceDirName":"Repositories/PRISM/Components","slug":"/Repositories/PRISM/Components/active-drones","permalink":"/devdocs/docs/Repositories/PRISM/Components/active-drones","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Repositories/PRISM/Components/active-drones.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"active-drones","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"drone-list","permalink":"/devdocs/docs/Repositories/PRISM/Components/drone-list"},"next":{"title":"drone-control","permalink":"/devdocs/docs/Repositories/PRISM/Components/drone-control"}}');var t=s(4848),o=s(8453);const r={title:"active-drones",sidebar_position:4},a="active-drones",d={},l=[{value:"Summary",id:"summary",level:2},{value:"Props",id:"props",level:2},{value:"Main Logic",id:"main-logic",level:2},{value:"Example: Initializing Drones",id:"example-initializing-drones",level:2},{value:"Where to Make Changes",id:"where-to-make-changes",level:2},{value:"Screenshots &amp; Diagrams",id:"screenshots--diagrams",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"active-drones",children:"active-drones"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"active-drones"})," component manages the initialization and display of all drones currently active in the simulation. It handles path generation, rogue drone logic, and readiness state for simulation start."]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Displays the list of active drones and their readiness state."}),"\n",(0,t.jsx)(n.li,{children:"Handles initialization of drone paths (including rogue paths)."}),"\n",(0,t.jsx)(n.li,{children:"Integrates with the simulation context and backend API for path generation."}),"\n"]}),"\n",(0,t.jsx)("img",{src:"https://ik.imagekit.io/devdocs/img/prism/active_drones.png",alt:"Active Drones",height:"500"}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.p,{children:"This component does not take explicit props; it uses the drone context for state."}),"\n",(0,t.jsx)(n.h2,{id:"main-logic",children:"Main Logic"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Calls backend API to generate paths for all drones."}),"\n",(0,t.jsx)(n.li,{children:"Handles both normal and rogue drone path generation."}),"\n",(0,t.jsx)(n.li,{children:"Updates drone state and readiness for simulation."}),"\n",(0,t.jsx)(n.li,{children:"Shows loading and error states via toasts."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-initializing-drones",children:"Example: Initializing Drones"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'const handleInitialize = () => {\n  // ...\n  const res = await axios.post("/api/generate_paths", { ... });\n  setPaths(res.data.paths);\n  // ...\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"where-to-make-changes",children:"Where to Make Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Path generation"}),": Update API endpoints or path logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rogue logic"}),": Change how rogue drones are handled."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI feedback"}),": Customize loading, error, or success states."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"screenshots--diagrams",children:"Screenshots & Diagrams"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://ik.imagekit.io/devdocs/img/prism/generating_paths.png",alt:"Generating Paths"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["For further customization, see the code comments in ",(0,t.jsx)(n.code,{children:"src/components/active-drones.tsx"})," and related context files."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(6540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);