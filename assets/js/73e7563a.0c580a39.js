"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[7716],{1381:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Repositories/PRISM/Components/results-drone-path","title":"results-drone-path","description":"The results-drone-path component fetches and displays an image overview of all drone paths in the simulation. It provides a visual summary of drone movement and zone coverage.","source":"@site/docs/Repositories/PRISM/Components/results-drone-path.md","sourceDirName":"Repositories/PRISM/Components","slug":"/Repositories/PRISM/Components/results-drone-path","permalink":"/devdocs/docs/Repositories/PRISM/Components/results-drone-path","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Repositories/PRISM/Components/results-drone-path.md","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"title":"results-drone-path","sidebar_position":16},"sidebar":"tutorialSidebar","previous":{"title":"results-charts","permalink":"/devdocs/docs/Repositories/PRISM/Components/results-charts"},"next":{"title":"results-processingtimechart","permalink":"/devdocs/docs/Repositories/PRISM/Components/drone-processing-charts"}}');var o=s(4848),r=s(8453);const i={title:"results-drone-path",sidebar_position:16},a="results-drone-path",d={},l=[{value:"Summary",id:"summary",level:2},{value:"Props",id:"props",level:2},{value:"Main Logic",id:"main-logic",level:2},{value:"Example: Fetching the Image",id:"example-fetching-the-image",level:2},{value:"Where to Make Changes",id:"where-to-make-changes",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"results-drone-path",children:"results-drone-path"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"results-drone-path"})," component fetches and displays an image overview of all drone paths in the simulation. It provides a visual summary of drone movement and zone coverage."]}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Fetches a generated image of all drone paths from the backend."}),"\n",(0,o.jsx)(n.li,{children:"Shows loading, error, and retry states."}),"\n",(0,o.jsx)(n.li,{children:"Integrates with the simulation context for path and zone data."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://ik.imagekit.io/devdocs/img/prism/drone_path_overview.png",alt:"Drone path overview"})}),"\n",(0,o.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,o.jsx)(n.p,{children:"This component does not take explicit props; it uses the drone context for state."}),"\n",(0,o.jsx)(n.h2,{id:"main-logic",children:"Main Logic"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Calls the backend to generate a path image based on current paths and zone."}),"\n",(0,o.jsx)(n.li,{children:"Handles loading, error, and retry logic."}),"\n",(0,o.jsx)(n.li,{children:"Displays the image or a placeholder if unavailable."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example-fetching-the-image",children:"Example: Fetching the Image"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const fetchDronePathImage = useCallback(async () => {\n  const res = await axios.post("/api/drone-paths-image", { ... });\n  setImageUrl(URL.createObjectURL(res.data));\n}, [paths, drones, monitoringZone]);\n'})}),"\n",(0,o.jsx)(n.h2,{id:"where-to-make-changes",children:"Where to Make Changes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Image generation"}),": Update backend endpoint or image format."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"UI feedback"}),": Change loading or error states."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["For further customization, see the code comments in ",(0,o.jsx)(n.code,{children:"src/components/results-drone-path.tsx"})," and related context files."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);