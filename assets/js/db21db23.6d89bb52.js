"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[3265],{8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var r=i(6540);const o={},t=r.createContext(o);function s(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}},9614:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Resources/Setting up a ML Dev Env/common_libs","title":"Common ML Libraries","description":"Once your system is CUDA-ready and you have Python and Conda set up, the next step is to install common ML libraries used in model training, evaluation, and experimentation.","source":"@site/docs/Resources/Setting up a ML Dev Env/common_libs.md","sourceDirName":"Resources/Setting up a ML Dev Env","slug":"/Resources/Setting up a ML Dev Env/common_libs","permalink":"/devdocs/docs/Resources/Setting up a ML Dev Env/common_libs","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Resources/Setting up a ML Dev Env/common_libs.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"CUDA Setup","permalink":"/devdocs/docs/Resources/Setting up a ML Dev Env/CUDA"},"next":{"title":"JupyterLab Setup","permalink":"/devdocs/docs/Resources/Setting up a ML Dev Env/jupyter"}}');var o=i(4848),t=i(8453);const s={sidebar_position:3},a="Common ML Libraries",l={},c=[{value:"\ud83e\uddf1 Create a Conda Environment",id:"-create-a-conda-environment",level:2},{value:"\u2699\ufe0f Core Libraries",id:"\ufe0f-core-libraries",level:2},{value:"\ud83e\udd16 Deep Learning Libraries",id:"-deep-learning-libraries",level:2},{value:"PyTorch",id:"pytorch",level:3},{value:"TensorFlow",id:"tensorflow",level:3},{value:"Other Useful Libraries",id:"other-useful-libraries",level:3},{value:"\ud83e\uddea Verify Installation",id:"-verify-installation",level:2},{value:"\ud83e\uddef Troubleshooting",id:"-troubleshooting",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"common-ml-libraries",children:"Common ML Libraries"})}),"\n",(0,o.jsx)(n.p,{children:"Once your system is CUDA-ready and you have Python and Conda set up, the next step is to install common ML libraries used in model training, evaluation, and experimentation."}),"\n",(0,o.jsx)(n.p,{children:"We'll guide you through installing PyTorch, TensorFlow, scikit-learn, XGBoost, pandas, NumPy, and more \u2014 all inside a Conda environment for version isolation."}),"\n",(0,o.jsx)(n.h2,{id:"-create-a-conda-environment",children:"\ud83e\uddf1 Create a Conda Environment"}),"\n",(0,o.jsx)(n.p,{children:"Always start by creating and activating a new environment:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"conda create -n ml python=3.11 -y\nconda activate ml\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Naming Convention",type:"tip",children:(0,o.jsxs)(n.p,{children:["Use descriptive names like ",(0,o.jsx)(n.code,{children:"ml"}),", ",(0,o.jsx)(n.code,{children:"ml-gpu"}),", or ",(0,o.jsx)(n.code,{children:"ml-projectname"})," to keep environments organized and easy to manage."]})}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-core-libraries",children:"\u2699\ufe0f Core Libraries"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"These are libraries that form the foundation of most ML projects:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"conda install numpy pandas scikit-learn matplotlib seaborn -c conda-forge\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"You can also include:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"conda install jupyterlab ipykernel -c conda-forge\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Why conda-forge?",type:"info",children:(0,o.jsx)(n.p,{children:"The conda-forge channel contains more up-to-date packages and builds compatible with a wider range of platforms and CUDA toolkits."})}),"\n",(0,o.jsx)(n.h2,{id:"-deep-learning-libraries",children:"\ud83e\udd16 Deep Learning Libraries"}),"\n",(0,o.jsx)(n.h3,{id:"pytorch",children:"PyTorch"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Follow the official ",(0,o.jsx)(n.a,{href:"https://pytorch.org/get-started/locally/",children:"install guide"})," for exact versions. Example for CUDA 12.1:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia\n"})}),"\n",(0,o.jsx)(n.h3,{id:"tensorflow",children:"TensorFlow"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Auto-detects GPU if CUDA/cuDNN are available:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install tensorflow\n"})}),"\n",(0,o.jsx)(n.h3,{id:"other-useful-libraries",children:"Other Useful Libraries"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"These help with model training, experimentation, and visualization:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install xgboost lightgbm optuna tqdm plotly\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-verify-installation",children:"\ud83e\uddea Verify Installation"}),"\n",(0,o.jsx)(n.p,{children:"Check if the deep learning libraries can detect GPU:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"import torch\nprint(torch.cuda.is_available())\nprint(torch.cuda.get_device_name(0))\n\nimport tensorflow as tf\nprint(tf.config.list_physical_devices('GPU'))\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-troubleshooting",children:"\ud83e\uddef Troubleshooting"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Try creating a fresh Conda environment and install from scratch. Avoid mixing pip and conda unless necessary."}),"\n",(0,o.jsx)(n.li,{children:"Make sure you installed TensorFlow after setting up CUDA and cuDNN. Run nvidia-smi to verify GPU drivers."}),"\n",(0,o.jsx)(n.li,{children:"Refer to official compatibility matrix of each library (e.g. PyTorch + CUDA version)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);