"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[2565],{1227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Repositories/PRISM/FastAPI/Helper Functions/generate_single_path","title":"generate_single_path","description":"This function simulates a single drone flight path from an initial position toward a target location within a monitoring zone. The generated path is influenced by factors like tortuosity (how winding the path is), speed profile (low/high/default), and random variations to simulate realistic drone behavior.","source":"@site/docs/Repositories/PRISM/FastAPI/Helper Functions/generate_single_path.md","sourceDirName":"Repositories/PRISM/FastAPI/Helper Functions","slug":"/Repositories/PRISM/FastAPI/Helper Functions/generate_single_path","permalink":"/devdocs/docs/Repositories/PRISM/FastAPI/Helper Functions/generate_single_path","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Repositories/PRISM/FastAPI/Helper Functions/generate_single_path.md","tags":[],"version":"current","frontMatter":{"sidebar_postion":6},"sidebar":"tutorialSidebar","previous":{"title":"generate_rogue_path","permalink":"/devdocs/docs/Repositories/PRISM/FastAPI/Helper Functions/generate_rogue_path"},"next":{"title":"generate_single_path_wrapper","permalink":"/devdocs/docs/Repositories/PRISM/FastAPI/Helper Functions/generate_single_path_wrapper"}}');var r=t(4848),s=t(8453);const d={sidebar_postion:6},l="generate_single_path",a={},o=[{value:"Function Signature",id:"function-signature",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:2},{value:"Key Components",id:"key-components",level:2},{value:"1. Initial Start and Target Setup",id:"1-initial-start-and-target-setup",level:3},{value:"2. Speed Initialization",id:"2-speed-initialization",level:3},{value:"3. Optional Stationary Start",id:"3-optional-stationary-start",level:3},{value:"4. Main Path Loop",id:"4-main-path-loop",level:3},{value:"Behavior Based on Parameters",id:"behavior-based-on-parameters",level:2},{value:"Tortuosity-Based Random Turning",id:"tortuosity-based-random-turning",level:3},{value:"Directional Blending Near Target",id:"directional-blending-near-target",level:3},{value:"Code",id:"code",level:4},{value:"Detailed Explanation",id:"detailed-explanation",level:4},{value:"Step 1: Compute <code>dist_factor</code>",id:"step-1-compute-dist_factor",level:5},{value:"Step 2: Compute <code>base_blend</code>",id:"step-2-compute-base_blend",level:5},{value:"Step 3: Compute Final Blend Weight",id:"step-3-compute-final-blend-weight",level:5},{value:"Step 4: Blend Directions",id:"step-4-blend-directions",level:5},{value:"Step 5: Normalize Direction",id:"step-5-normalize-direction",level:5},{value:"Summary",id:"summary",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Sample Output",id:"sample-output",level:3},{value:"Summary Table",id:"summary-table",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"generate_single_path",children:(0,r.jsx)(n.code,{children:"generate_single_path"})})}),"\n",(0,r.jsxs)(n.p,{children:["This function simulates a ",(0,r.jsx)(n.strong,{children:"single drone flight path"})," from an initial position toward a target location within a monitoring zone. The generated path is influenced by factors like tortuosity (how winding the path is), speed profile (low/high/default), and random variations to simulate realistic drone behavior."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def generate_single_path(center, mz_radius, tortuosity, speed='default', dt=0.2):\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"center"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Point"})}),(0,r.jsxs)(n.td,{children:["Center of the monitoring zone (must have ",(0,r.jsx)(n.code,{children:"latitude"})," and ",(0,r.jsx)(n.code,{children:"longitude"}),")."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mz_radius"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float"})}),(0,r.jsx)(n.td,{children:"Radius of the monitoring zone in meters."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tortuosity"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float"})}),(0,r.jsx)(n.td,{children:"Level of winding in the path. 0 = straight line, 1 = highly curved."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"speed"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"str"})}),(0,r.jsxs)(n.td,{children:["Either ",(0,r.jsx)(n.code,{children:"'low'"}),", ",(0,r.jsx)(n.code,{children:"'high'"}),", or ",(0,r.jsx)(n.code,{children:"'default'"})," \u2014 sets the speed range."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dt"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float"})}),(0,r.jsx)(n.td,{children:"Time step (in seconds) for each point along the path."})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"return path, tortuosity\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path"}),": List of tuples ",(0,r.jsx)(n.code,{children:"((lat, lon), t, speed)"})," representing the drone's flight path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tortuosity"}),": The input tortuosity value, returned for convenience."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,r.jsx)(n.h3,{id:"1-initial-start-and-target-setup",children:"1. Initial Start and Target Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"start_distance = np.random.uniform(mz_radius + 30, mz_radius + 100)\nstart_pos = distance(meters=start_distance).destination(center, start_angle_deg)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The drone starts ",(0,r.jsx)(n.strong,{children:"outside"})," the monitoring zone at a random angle and distance."]}),"\n",(0,r.jsxs)(n.li,{children:["The target is randomly placed ",(0,r.jsx)(n.strong,{children:"inside"})," the zone, between 20% and 90% of the radius."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"2-speed-initialization",children:"2. Speed Initialization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if speed == "low":\n    initial_speed = np.random.uniform(5, 10)\nelif speed == "high":\n    initial_speed = np.random.uniform(30, 35)\nelse:\n    initial_speed = np.random.uniform(15, 25)\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Sets a base speed that will be smoothed using the ",(0,r.jsx)(n.code,{children:"SmoothSpeed"})," class."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"3-optional-stationary-start",children:"3. Optional Stationary Start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"if np.random.random() < 0.2:\n    offset = np.random.randint(5, 25)\n    start_distance = np.random.uniform(0, mz_radius * 0.8)\n    start_pos = distance(meters=start_distance).destination(center, start_angle_deg)\n    start_at_zero = True\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["20% of the time, the drone starts from a resting position ",(0,r.jsx)(n.strong,{children:"inside"})," the zone with a time offset."]}),"\n",(0,r.jsx)(n.li,{children:"This simulates a drone taking off later in the simulation."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"4-main-path-loop",children:"4. Main Path Loop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"while True:\n    ...\n    speed = speedSmoother.get_next_speed()\n"})}),"\n",(0,r.jsx)(n.p,{children:"For each time step:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Update time ",(0,r.jsx)(n.code,{children:"t"})]}),"\n",(0,r.jsx)(n.li,{children:"Compute distance from center and target"}),"\n",(0,r.jsx)(n.li,{children:"Adjust direction using tortuosity"}),"\n",(0,r.jsx)(n.li,{children:"Update position based on speed and direction"}),"\n",(0,r.jsx)(n.li,{children:"Append to the path"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Path generation ends when:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The drone enters and exits the MZ (",(0,r.jsx)(n.code,{children:"dist > mz_radius * 1.2"}),"), or"]}),"\n",(0,r.jsxs)(n.li,{children:["It reaches the target and the speed drops to 0 (if ",(0,r.jsx)(n.code,{children:"stop_flag=True"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"behavior-based-on-parameters",children:"Behavior Based on Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"tortuosity-based-random-turning",children:"Tortuosity-Based Random Turning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"angle = np.random.uniform(-max_turn_angle, max_turn_angle)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Adds random angular deviations at each step for winding paths."}),"\n",(0,r.jsxs)(n.li,{children:["The higher the ",(0,r.jsx)(n.code,{children:"tortuosity"}),", the larger the turning range."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"directional-blending-near-target",children:"Directional Blending Near Target"}),"\n",(0,r.jsxs)(n.p,{children:["This logic ensures the drone ",(0,r.jsx)(n.strong,{children:"smoothly turns toward the target"})," as it gets closer."]}),"\n",(0,r.jsx)(n.h4,{id:"code",children:"Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"blend_weight = base_blend + (1 - base_blend) * dist_factor\ncurrent_dir = (1 - blend_weight) * current_dir + blend_weight * to_target\ncurrent_dir /= np.linalg.norm(current_dir)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"detailed-explanation",children:"Detailed Explanation"}),"\n",(0,r.jsxs)(n.h5,{id:"step-1-compute-dist_factor",children:["Step 1: Compute ",(0,r.jsx)(n.code,{children:"dist_factor"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"dist_factor = np.clip(1 - (distance_to_target / max_dist), 0.0, 1.0)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"distance_to_target"})," is how far the drone is from the target."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_dist"})," is a threshold (10% of MZ radius) within which blending starts."]}),"\n",(0,r.jsxs)(n.li,{children:["When far: ",(0,r.jsx)(n.code,{children:"dist_factor \u2248 0"})," \u2192 little influence from target direction."]}),"\n",(0,r.jsxs)(n.li,{children:["When close: ",(0,r.jsx)(n.code,{children:"dist_factor \u2248 1"})," \u2192 strong influence from target direction."]}),"\n"]}),"\n",(0,r.jsxs)(n.h5,{id:"step-2-compute-base_blend",children:["Step 2: Compute ",(0,r.jsx)(n.code,{children:"base_blend"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"base_blend = 0.01 + 0.99 * (1 - tortuosity)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"tortuosity = 0"}),": ",(0,r.jsx)(n.code,{children:"base_blend \u2248 1.0"})," \u2192 always aim straight to the target."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"tortuosity = 1"}),": ",(0,r.jsx)(n.code,{children:"base_blend \u2248 0.01"})," \u2192 prioritize randomness over targeting."]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"step-3-compute-final-blend-weight",children:"Step 3: Compute Final Blend Weight"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"blend_weight = base_blend + (1 - base_blend) * dist_factor\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When far from target: ",(0,r.jsx)(n.code,{children:"blend_weight \u2248 base_blend"})]}),"\n",(0,r.jsxs)(n.li,{children:["When close to target: ",(0,r.jsx)(n.code,{children:"blend_weight \u2192 1.0"})]}),"\n",(0,r.jsx)(n.li,{children:"The closer the drone gets, the more it steers toward the target."}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"step-4-blend-directions",children:"Step 4: Blend Directions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"current_dir = (1 - blend_weight) * current_dir + blend_weight * to_target\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Linearly interpolates between current direction and target direction."}),"\n",(0,r.jsx)(n.li,{children:"Makes direction changes smooth and natural."}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"step-5-normalize-direction",children:"Step 5: Normalize Direction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"current_dir /= np.linalg.norm(current_dir)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Keeps ",(0,r.jsx)(n.code,{children:"current_dir"})," as a unit vector to preserve proper scaling."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"This blending technique:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prevents overshooting or circling the target"}),"\n",(0,r.jsx)(n.li,{children:"Avoids abrupt turns"}),"\n",(0,r.jsx)(n.li,{children:"Produces a realistic, convergent flight path"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from geopy import Point\n\npath, tortuosity = generate_single_path(\n    center=Point(25.276987, 55.296249),\n    mz_radius=300,\n    tortuosity=0.5,\n    speed="default"\n)\n\nfor step in path[:5]:\n    print(step)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"sample-output",children:"Sample Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"((25.30, 55.31), 0.0, 22.5)\n((25.30, 55.31), 0.2, 21.9)\n((25.30, 55.31), 0.4, 22.3)\n...\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"summary-table",children:"Summary Table"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Starts outside MZ"}),(0,r.jsx)(n.td,{children:"Drone begins outside the monitoring zone"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Curved/straight control"}),(0,r.jsxs)(n.td,{children:["Controlled via ",(0,r.jsx)(n.code,{children:"tortuosity"})," parameter"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Smoothed speed"}),(0,r.jsxs)(n.td,{children:["Uses ",(0,r.jsx)(n.code,{children:"SmoothSpeed"})," to simulate acceleration"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Intelligent path ending"}),(0,r.jsx)(n.td,{children:"Stops path when drone exits MZ or reaches target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Realistic behavior"}),(0,r.jsx)(n.td,{children:"Includes turn smoothing, start delays, and target convergence"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);