"use strict";(self.webpackChunkdeploy_to_vm=self.webpackChunkdeploy_to_vm||[]).push([[8],{5233:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"Deploying to Virtual Machine/Startup Script","title":"Startup Script","description":"Setting up your app as a systemd service ensures it starts automatically after a reboot and can be easily managed like any other Linux service. This is ideal for apps deployed with Docker or running persistently in the background.","source":"@site/docs/Deploying to Virtual Machine/Startup Script.md","sourceDirName":"Deploying to Virtual Machine","slug":"/Deploying to Virtual Machine/Startup Script","permalink":"/devdocs/docs/Deploying to Virtual Machine/Startup Script","draft":false,"unlisted":false,"editUrl":"https://github.com/ryyanrashid01/devdocs/edit/main/docs/Deploying to Virtual Machine/Startup Script.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"HTTPS with Certbot","permalink":"/devdocs/docs/Deploying to Virtual Machine/HTTPS with Certbot"},"next":{"title":"GitHub Actions","permalink":"/devdocs/docs/Deploying to Virtual Machine/GitHub Actions"}}');var i=s(4848),t=s(8453);const l={sidebar_position:5},a=void 0,c={},o=[{value:"Step 1: Create a systemd Service File",id:"step-1-create-a-systemd-service-file",level:2},{value:"Step 2: Define the Service Configuration",id:"step-2-define-the-service-configuration",level:2},{value:"Explanation of Each Field",id:"explanation-of-each-field",level:3},{value:"Using systemd Without Docker",id:"using-systemd-without-docker",level:3},{value:"Node.js (e.g. running <code>node index.js</code>)",id:"nodejs-eg-running-node-indexjs",level:4},{value:"Node.js with npm (e.g. <code>npm start</code>)",id:"nodejs-with-npm-eg-npm-start",level:4},{value:"Python with Gunicorn (e.g. Flask or Django)",id:"python-with-gunicorn-eg-flask-or-django",level:4},{value:"Next.js / React (e.g. <code>npm run start</code>)",id:"nextjs--react-eg-npm-run-start",level:4},{value:"Why Use Full Paths in <code>ExecStart</code>",id:"why-use-full-paths-in-execstart",level:3},{value:"How to Find the Full Path of a Command",id:"how-to-find-the-full-path-of-a-command",level:3},{value:"Step 3: Reload and Enable the Service",id:"step-3-reload-and-enable-the-service",level:2},{value:"Step 4: Verify the Service is Running",id:"step-4-verify-the-service-is-running",level:2},{value:"Step 5: View Logs",id:"step-5-view-logs",level:2},{value:"Step 6: Reboot and Confirm Auto-Start",id:"step-6-reboot-and-confirm-auto-start",level:2},{value:"Service Management Commands",id:"service-management-commands",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Setting up your app as a ",(0,i.jsx)(n.strong,{children:"systemd service"})," ensures it starts automatically after a reboot and can be easily managed like any other Linux service. This is ideal for apps deployed with Docker or running persistently in the background."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-1-create-a-systemd-service-file",children:"Step 1: Create a systemd Service File"}),"\n",(0,i.jsx)(n.p,{children:"Create a new service file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/example-app.service\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"example-app.service"})," with a name that reflects your actual application."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-2-define-the-service-configuration",children:"Step 2: Define the Service Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Paste the following content into your service file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=Example App Service\n# Uncomment these if your app depends on Docker\n# After=docker.service\n# Requires=docker.service\n\n[Service]\nWorkingDirectory=/home/example-user/example-app\nExecStart=/bin/bash -c '/usr/bin/docker compose -f /home/example-user/example-app/docker-compose.yml up >> /home/example-user/example-app/server.log 2>&1'\nExecStop=/usr/bin/docker compose -f /home/example-user/example-app/docker-compose.yml down\nRestart=on-failure\nTimeoutStartSec=600\nUser=example-user\nGroup=example-user\nEnvironment=DOCKER_BUILDKIT=1\nEnvironment=COMPOSE_DOCKER_CLI_EXPERIMENTAL=1\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["If you're ",(0,i.jsx)(n.strong,{children:"not using Docker"}),", replace the ",(0,i.jsx)(n.code,{children:"ExecStart"})," and ",(0,i.jsx)(n.code,{children:"ExecStop"})," commands with the ones used to start and stop your app manually (e.g., ",(0,i.jsx)(n.code,{children:"node index.js"}),", ",(0,i.jsx)(n.code,{children:"npm run start"}),", ",(0,i.jsx)(n.code,{children:"gunicorn"}),", etc.). See [[#Using systemd Without Docker]]."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"explanation-of-each-field",children:"Explanation of Each Field"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WorkingDirectory"})}),(0,i.jsx)(n.td,{children:"Directory where your application code lives."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ExecStart"})}),(0,i.jsx)(n.td,{children:"Command to start the app (this example runs Docker Compose)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ExecStop"})}),(0,i.jsx)(n.td,{children:"Command to stop the app cleanly."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Restart"})}),(0,i.jsx)(n.td,{children:"Restarts the app automatically on failure."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"User"})," / ",(0,i.jsx)(n.code,{children:"Group"})]}),(0,i.jsx)(n.td,{children:"The Linux user and group under which the service runs."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Environment"})}),(0,i.jsx)(n.td,{children:"Environment variables used by Docker or your app."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"WantedBy"})}),(0,i.jsx)(n.td,{children:"Ensures this service starts on boot during the default system runlevel."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"using-systemd-without-docker",children:"Using systemd Without Docker"}),"\n",(0,i.jsx)(n.p,{children:"Below are examples for different environments:"}),"\n",(0,i.jsxs)(n.h4,{id:"nodejs-eg-running-node-indexjs",children:["Node.js (e.g. running ",(0,i.jsx)(n.code,{children:"node index.js"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"ExecStart=/usr/bin/node /home/example-user/example-app/index.js\nExecStop=/bin/kill -TERM $MAINPID\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"nodejs-with-npm-eg-npm-start",children:["Node.js with npm (e.g. ",(0,i.jsx)(n.code,{children:"npm start"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"ExecStart=/usr/bin/npm start --prefix /home/example-user/example-app\nExecStop=/bin/kill -TERM $MAINPID\n"})}),"\n",(0,i.jsx)(n.h4,{id:"python-with-gunicorn-eg-flask-or-django",children:"Python with Gunicorn (e.g. Flask or Django)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"ExecStart=/home/example-user/.venv/bin/gunicorn app:app --bind 127.0.0.1:8000\nExecStop=/bin/kill -TERM $MAINPID\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"app:app"})," with your actual module and application name."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"nextjs--react-eg-npm-run-start",children:["Next.js / React (e.g. ",(0,i.jsx)(n.code,{children:"npm run start"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"ExecStart=/usr/bin/npm run start --prefix /home/example-user/example-app\nExecStop=/bin/kill -TERM $MAINPID\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"why-use-full-paths-in-execstart",children:["Why Use Full Paths in ",(0,i.jsx)(n.code,{children:"ExecStart"})]}),"\n",(0,i.jsxs)(n.p,{children:["systemd service files should always use ",(0,i.jsx)(n.strong,{children:"absolute paths"})," (e.g., ",(0,i.jsx)(n.code,{children:"/usr/bin/node"}),", ",(0,i.jsx)(n.code,{children:"/usr/bin/npm"}),") instead of just ",(0,i.jsx)(n.code,{children:"node"})," or ",(0,i.jsx)(n.code,{children:"npm"}),". This is because ",(0,i.jsx)(n.code,{children:"systemd"})," may not inherit your shell's ",(0,i.jsx)(n.code,{children:"$PATH"}),", and commands might fail to run if the path is not explicitly defined."]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-find-the-full-path-of-a-command",children:"How to Find the Full Path of a Command"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"which"})," command to determine the absolute path:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"which node\n# /usr/bin/node\n\nwhich npm\n# /usr/bin/npm\n\nwhich gunicorn\n# /home/youruser/.venv/bin/gunicorn\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you're using a Python virtual environment (like ",(0,i.jsx)(n.code,{children:"venv"}),"), the path will usually be inside your project directory or user home:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"/home/youruser/myapp/.venv/bin/gunicorn\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Make sure to copy the ",(0,i.jsx)(n.strong,{children:"exact"})," paths into your ",(0,i.jsx)(n.code,{children:"ExecStart"})," and ",(0,i.jsx)(n.code,{children:"ExecStop"})," lines."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-3-reload-and-enable-the-service",children:"Step 3: Reload and Enable the Service"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Reload systemd to recognize your new service:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Enable the service to auto-start on boot:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable example-app.service\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Start the service now:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start example-app.service\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-4-verify-the-service-is-running",children:"Step 4: Verify the Service is Running"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check if the service is active:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status example-app.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["You should see something like ",(0,i.jsx)(n.code,{children:"active (running)"})," if everything is working."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-5-view-logs",children:"Step 5: View Logs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Your app logs are saved to the file defined in ",(0,i.jsx)(n.code,{children:"ExecStart"}),". For example:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"/home/example-user/example-app/server.log\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You can monitor the logs in real time:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /home/example-user/example-app/server.log\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-6-reboot-and-confirm-auto-start",children:"Step 6: Reboot and Confirm Auto-Start"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Restart your machine to make sure the service starts automatically:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo reboot now\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Once it reboots, check the service again:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status example-app.service\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"service-management-commands",children:"Service Management Commands"}),"\n",(0,i.jsx)(n.p,{children:"Use these commands to control your app:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start example-app.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stop"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop example-app.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Restart"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart example-app.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status example-app.service\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);